package Front;

import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.*;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import javax.swing.JOptionPane;
import java.text.SimpleDateFormat;
import javax.swing.JComboBox;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import java.time.LocalDate;
import javax.swing.table.TableRowSorter;
import java.text.NumberFormat;
import java.util.Locale;

/**
 * *
 *
 * @author Kevin Argueta
 */
public class form_nuevo_prestamo extends javax.swing.JFrame {

    /**
     * Creates new form form_new_prestamo
     */
    DefaultTableModel dm;
    private JComboBox combo;
    int estado_prestamo_nuevo = 0;
    String saldo_falta = "", couta_falta = "", ganancia_falta = "";
    double monto;
    double interes;
    double total;
    double ganancia, comision_cobra, ganancia_neta;
    Locale usa = new Locale("us", "US");
    NumberFormat formatter = NumberFormat.getCurrencyInstance(usa);

    public form_nuevo_prestamo() {
        initComponents();
        //Image icon = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("Imagenes/icon.jpg"));
        //setIconImage(icon);
        //setVisible(true);
        cerrar();
        txt_id.setVisible(false);
        setResizable(false);
        SimpleDateFormat dformat = new SimpleDateFormat("dd-MM-yyyy");
        //txt_fecha_creacion.setEditable(true);
        LocalDate local = LocalDate.now();
        Date date = java.sql.Date.valueOf(local);
        String fecha = dformat.format(date);
        //txt_fecha_creacion.setText(fecha);
        txt_monto_a.setEditable(false);
        txt_ganan.setEditable(false);
        txt_id.setEditable(false);

        txt_couta.setEditable(false);
        txt_cuota_pagar.setEditable(false);
        txt_pago_porce.setEditable(false);
        conexcion con = new conexcion();
        DefaultTableModel tbl = new DefaultTableModel();
        tbl.addColumn("ID");
        tbl.addColumn("Nombres");
        tbl.addColumn("Apellidos");
        tbl.addColumn("DPI");
        tbl.addColumn("Teléfono");
        tbla_clie.setModel(tbl);
        String query = "SELECT id_cliente,nombre_cliente,apellido_cliente,dpi,telefono FROM tbl_cliente";
        String query_socio = "SELECT nombres_socio from tbl_socio";
        String query_cobrador = "SELECT nombre from tbl_cobrador";
        String[] dato = new String[5];
        Statement str, str_socio, str_cobrador;
        combo = new JComboBox();

        try {

            str = con.getConnection().createStatement();
            ResultSet result = str.executeQuery(query);

            str_socio = con.getConnection().createStatement();
            ResultSet result_socio = str_socio.executeQuery(query_socio);

            str_cobrador = con.getConnection().createStatement();
            ResultSet result_cobrador = str_cobrador.executeQuery(query_cobrador);

            while (result_socio.next()) {
                cmb_socio.addItem(result_socio.getString(1));
            }
            while (result_cobrador.next()) {
                cmb_cobrador.addItem(result_cobrador.getString(1));
            }

            while (result.next()) {
                dato[0] = result.getString(1);
                dato[1] = result.getString(2);
                dato[2] = result.getString(3);
                dato[3] = result.getString(4);
                dato[4] = result.getString(5);

                tbl.addRow(dato);
            }
            str.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error!, la llamada no pudo ser agregada a la base de datos.");
        }

        txt_interes.enable(false);
        date_cre.enable(false);
        chk_gara.enable(false);
        cmb_plazo.enable(false);
        cmb_cobrador.enable(false);
        txt_porcentaje.enable(false);
        cmb_socio.enable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel7 = new javax.swing.JLabel();
        txt_id = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        cmb_cobrador = new javax.swing.JComboBox<>();
        jLabel17 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        cmb_socio = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        txt_porcentaje = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        txt_pago_porce = new javax.swing.JTextField();
        salir = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        date_cre = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        txt_couta = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        txt_interes = new javax.swing.JTextField();
        txt_monto_s = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txt_fecha_creacion = new com.toedter.calendar.JDateChooser();
        jLabel8 = new javax.swing.JLabel();
        txt_dpi = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txt_nombre = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbla_clie = new javax.swing.JTable();
        chk_gara = new javax.swing.JCheckBox();
        jLabel10 = new javax.swing.JLabel();
        cmb_plazo = new javax.swing.JComboBox();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txt_cuota_pagar = new javax.swing.JTextField();
        txt_ganan = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txt_monto_a = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Solicitud de Nuevo Préstamo");
        setMinimumSize(new java.awt.Dimension(1000, 700));
        getContentPane().setLayout(null);

        jLabel7.setFont(new java.awt.Font("Cooper Black", 1, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Solicitud de  Nuevo Préstamo");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(270, 0, 410, 39);
        getContentPane().add(txt_id);
        txt_id.setBounds(930, 0, 46, 26);

        jPanel1.setBackground(new java.awt.Color(187, 187, 187,80));
        jPanel1.setMinimumSize(new java.awt.Dimension(1000, 700));

        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 11)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/save.png"))); // NOI18N
        jButton1.setText("GUARDAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        cmb_cobrador.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        cmb_cobrador.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cobrador" }));

        jLabel17.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel17.setText("Cobrador");

        jLabel16.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel16.setText("Socio");

        cmb_socio.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        cmb_socio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Socio" }));
        cmb_socio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                cmb_socioMouseReleased(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel11.setText("Porcentaje");

        txt_porcentaje.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        txt_porcentaje.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_porcentajeKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_porcentajeKeyTyped(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel18.setText("Pago comision");

        txt_pago_porce.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N

        salir.setFont(new java.awt.Font("Times New Roman", 1, 11)); // NOI18N
        salir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/exit.png"))); // NOI18N
        salir.setText("CANCELAR");
        salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Times New Roman", 1, 11)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/back.png"))); // NOI18N
        jButton2.setText("REGRESAR");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel2.setText("Cuotas");

        txt_couta.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        txt_couta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_coutaKeyReleased(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel15.setText("Fecha Finalización");

        jLabel14.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel14.setText("Fecha Creación");

        txt_interes.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        txt_interes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_interesKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_interesKeyTyped(evt);
            }
        });

        txt_monto_s.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        txt_monto_s.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                txt_monto_sInputMethodTextChanged(evt);
            }
        });
        txt_monto_s.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_monto_sKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_monto_sKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_monto_sKeyTyped(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel9.setText("Interés");

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel1.setText("Nombres");

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel8.setText("Monto");

        txt_dpi.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        txt_dpi.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_dpiKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_dpiKeyTyped(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel6.setText("DPI");

        txt_nombre.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        txt_nombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_nombreKeyReleased(evt);
            }
        });

        jScrollPane1.setBackground(new java.awt.Color(102, 105, 103,80));

        tbla_clie.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        tbla_clie.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tbla_clie.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbla_clieMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbla_clie);

        chk_gara.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        chk_gara.setText("Garantía");
        chk_gara.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chk_garaActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel10.setText("Forma de pago");

        cmb_plazo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Plazo", "Diario", "Semanal", "Mensual", "Personalizado" }));
        cmb_plazo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_plazoActionPerformed(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Cooper Black", 1, 14)); // NOI18N
        jLabel20.setText("DATOS NUEVO PRÉSTAMO");

        jPanel2.setBackground(new java.awt.Color(102, 105, 103,80));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel3.setText("Cuota a pagar");

        txt_cuota_pagar.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N

        jLabel13.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel13.setText("Monto a Pagar");

        jLabel19.setFont(new java.awt.Font("Cooper Black", 1, 18)); // NOI18N
        jLabel19.setText("INTERESES GENERADOS");

        jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel12.setText("Ganancia");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(35, 35, 35)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_monto_a, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                            .addComponent(txt_ganan)
                            .addComponent(txt_cuota_pagar))))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_cuota_pagar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_ganan, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_monto_a, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(207, 207, 207))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txt_porcentaje, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(cmb_plazo, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txt_fecha_creacion, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txt_monto_s, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(cmb_socio, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(77, 77, 77)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel15))
                                                .addGap(0, 0, Short.MAX_VALUE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txt_pago_porce, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(cmb_cobrador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txt_couta, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(date_cre, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(61, 61, 61)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(salir)
                                    .addComponent(jButton2)
                                    .addComponent(jButton1)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(13, 13, 13)
                                        .addComponent(chk_gara))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(241, 241, 241)
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(79, 79, 79)
                                .addComponent(txt_interes, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 812, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txt_dpi)
                                    .addComponent(txt_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(jLabel21)
                                .addGap(119, 119, 119)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(53, 53, 53)
                                .addComponent(jLabel21))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txt_dpi, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(14, 14, 14)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txt_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chk_gara, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_monto_s, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_interes, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_fecha_creacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(date_cre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE))))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmb_plazo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_porcentaje, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmb_socio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(169, 169, 169))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_couta, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_pago_porce, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(salir)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(cmb_cobrador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton2)))
                        .addGap(0, 164, Short.MAX_VALUE))))
        );

        getContentPane().add(jPanel1);
        jPanel1.setBounds(60, 60, 900, 570);

        jLabel4.setIcon(new javax.swing.ImageIcon("C:\\Users\\argue\\Documents\\GitHub\\prestamo\\src\\Imagenes\\fondoo.jpg")); // NOI18N
        jLabel4.setText("jLabel4");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(1, 0, 1090, 660);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cmb_plazoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_plazoActionPerformed
        int seleccion;
        double monto, total;
        DecimalFormatSymbols punto = new DecimalFormatSymbols();
        punto.setDecimalSeparator('.');
        DecimalFormat dc = new DecimalFormat("0.00", punto);
        seleccion = cmb_plazo.getSelectedIndex();

        try {
            if (txt_monto_s.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Ingrese monto");
            } else {
                if (txt_monto_s.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Ingrese interes");
                } else {
                   
                    txt_couta.setEditable(true);
                    txt_couta.setText("");
                    txt_cuota_pagar.setText("");
                    txt_couta.requestFocus();

                    /*switch (seleccion) {
                        case 1:
                            monto = Double.parseDouble(txt_ganan.getText());
                            total = monto / 23;
                            txt_cuota_pagar.setText(dc.format(total));
                            break;
                        case 2:
                            monto = Double.parseDouble(txt_ganan.getText());
                            total = monto / 4;
                            txt_cuota_pagar.setText(dc.format(total));
                            break;
                        case 3:
                            txt_couta.setText("1");
                            monto = Double.parseDouble(txt_ganan.getText());
                            total = monto / 1;
                            txt_cuota_pagar.setText(dc.format(total));
                            break;
                     
                        case 4:
                            txt_couta.setEditable(true);
                            txt_couta.setText("");
                            txt_cuota_pagar.setText("");
                            txt_couta.requestFocus();
                            break;

                    }*/
                }
            }
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_cmb_plazoActionPerformed

    private void chk_garaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chk_garaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chk_garaActionPerformed

    private void tbla_clieMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbla_clieMouseClicked
        int seleccion = tbla_clie.rowAtPoint(evt.getPoint());
        txt_id.setText(String.valueOf(tbla_clie.getValueAt(seleccion, 0)));
        txt_dpi.setText(String.valueOf(tbla_clie.getValueAt(seleccion, 3)));
        txt_nombre.setText(String.valueOf(tbla_clie.getValueAt(seleccion, 1)));
    }//GEN-LAST:event_tbla_clieMouseClicked
    private void filtro(String consulta, JTable jtableBuscar) {
        dm = (DefaultTableModel) jtableBuscar.getModel();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<>(dm);
        jtableBuscar.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(consulta));
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        SimpleDateFormat dformat = new SimpleDateFormat("yyyy-MM-dd");
        int seleccion = cmb_plazo.getSelectedIndex(), cuota;
        LocalDate local = LocalDate.now();
        int socio = cmb_socio.getSelectedIndex();
        int cobrador = cmb_cobrador.getSelectedIndex();
        String fec_c, prestamo_cambio = "";
        String fec_f;
        int estadod = 0, res = 0, ga = 0;
        int id_cliente;
        int garantia = 0;
        double monto;
        double interes, porcentaje;
        double monto_a_pa, pago_comi;
        double ganancia, cuota_tot;
        DecimalFormatSymbols punto = new DecimalFormatSymbols();
        punto.setDecimalSeparator('.');
        DecimalFormat dc = new DecimalFormat("0.00", punto);
        conexcion con = new conexcion();
        String query = "INSERT INTO tbl_prestamo (id_prestamo,monto,interes,fecha_creacion,fecha_finalizacion,monto_interes,ganancia,estado_garantia,"
                + "cuotas,total_cuota"
                + ",id_cliente,id_plazo,estado,saldo_faltante,cuota_faltante,id_socio,estado_comision,id_cobrador,porcentaje_cobra,pago_comision) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?,?)";
        String query2 = "SELECT id_prestamo,id_cliente,estado,saldo_faltante,cuota_faltante,ganancia FROM tbl_prestamo";

        String[] dato = new String[7];
        Statement str1;

        try {

            str1 = con.getConnection().createStatement();
            ResultSet result = str1.executeQuery(query2);
            while (result.next()) {

                dato[0] = result.getString(1);
                dato[1] = result.getString(2);
                dato[2] = result.getString(3);
                dato[3] = result.getString(4);
                dato[4] = result.getString(5);
                dato[5] = result.getString(6);

                if (txt_id.getText().equals(dato[1]) && dato[2].equals("1")) {
                    saldo_falta = dato[3];
                    prestamo_cambio = dato[0];
                    couta_falta = dato[4];
                    ganancia_falta = dato[5];
                    estadod = 1;
                } else {
                }
            }
        } catch (SQLException e) {

        }
        double nuevo_saldo, aux, nueva_suma;
        double a, b, c, d, el;
        String aux_monto;
        String query_prestamo_pen = "UPDATE `dbprestamo`.`tbl_prestamo` SET `saldo_faltante` = '0', `cuota_faltante` = '0',`estado` = '0' ,`estado_comision` = '0' WHERE (`id_prestamo` = '" + prestamo_cambio + "')";

        if (estadod == 1) {
            JOptionPane.showMessageDialog(null, "EL CLIENTE TIENE UN PRESTAMO ACTIVO CON UN SALDO FALTANTE DE: " + saldo_falta + "\nCUOTAS FALTANTES: " + couta_falta + "\nGANANCIA ANTERIOR:" + ganancia_falta);
            int pres_nue = JOptionPane.showConfirmDialog(null, "DESEA REALIZAR UN NUEVO PRESTAMO AL CLIENTE", "CONFIRMAR PRESTAMO", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (pres_nue == 0) {
                if (cmb_cobrador.getSelectedIndex() == 0) {

                } else {
                    if (cmb_socio.getSelectedIndex() == 0) {
                    } else {
                        aux = Double.parseDouble(txt_ganan.getText());
                        a = Double.parseDouble(txt_monto_a.getText());
                        b = Double.parseDouble(ganancia_falta);
                        nuevo_saldo = Double.parseDouble(saldo_falta);
                        nueva_suma = nuevo_saldo + aux;
                        txt_ganan.setText(dc.format(nueva_suma));
                        c = a + b;
                        //d=Double.parseDouble(txt_pago_porce.getText());
                        //el=c-d;
                        txt_monto_a.setText(dc.format(c));
                        el=Double.parseDouble(txt_couta.getText());
                        d=nueva_suma/el;
                        txt_cuota_pagar.setText(dc.format(d));
                       /* if (cmb_plazo.getSelectedIndex() == 1) {
                            c = Double.parseDouble(txt_ganan.getText());
                            d = c / 23;
                            txt_cuota_pagar.setText(dc.format(d));
                        }
                        if (cmb_plazo.getSelectedIndex() == 2) {
                            c = Double.parseDouble(txt_ganan.getText());
                            d = c / 4;
                            txt_cuota_pagar.setText(dc.format(d));
                        }
                        if (cmb_plazo.getSelectedIndex() == 3) {
                            c = Double.parseDouble(txt_ganan.getText());
                            d = c / 1;
                            txt_cuota_pagar.setText(dc.format(d));
                        }*/
                    }
                }
                int pres_seguro = JOptionPane.showConfirmDialog(null, "¿Esta seguro del nuevo prestamo?", "Confirmar prestamo", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                if (pres_seguro == 0) {

                    try {
                        if (chk_gara.isSelected() == true) {
                            garantia = 1;
                        }
                        if (txt_id.getText().isEmpty()) {
                            JOptionPane.showMessageDialog(null, "Seleccione un cliente");
                        } else {
                            if (txt_monto_s.getText().isEmpty()) {
                                JOptionPane.showMessageDialog(null, "Ingrese Monto Solicitado");
                            } else {
                                if (txt_interes.getText().isEmpty()) {
                                    JOptionPane.showMessageDialog(null, "Ingrese el Interes");
                                } else {
                                    if (date_cre.getDate() == null) {
                                        JOptionPane.showMessageDialog(null, "Ingrese  fecha Final");
                                    } else {
                                        if (seleccion == 0) {
                                            JOptionPane.showMessageDialog(null, "Seleccione un Plazo");
                                        } else {
                                            if (socio == 0) {
                                                JOptionPane.showMessageDialog(null, "Seleccione un Socio");
                                            } else {
                                                if (cobrador == 0) {
                                                    JOptionPane.showMessageDialog(null, "Seleccione un Cobrador");
                                                } else {
                                                    PreparedStatement str_update = con.getConnection().prepareStatement(query_prestamo_pen);

                                                    int res_update = str_update.executeUpdate();
                                                    if (res_update > 0) {

                                                        monto = Double.parseDouble(txt_monto_s.getText());
                                                        interes = Double.parseDouble(txt_interes.getText());
                                                        porcentaje = Double.parseDouble(txt_porcentaje.getText());
                                                        pago_comi = Double.parseDouble(txt_pago_porce.getText());
                                                        id_cliente = Integer.parseInt(txt_id.getText());
                                                        ganancia = Double.parseDouble(txt_monto_a.getText());
                                                        monto_a_pa = Double.parseDouble(txt_ganan.getText());
                                                        fec_f = dformat.format(date_cre.getDate());
                                                        fec_c = dformat.format(txt_fecha_creacion.getDate());
                                                        cuota = Integer.parseInt(txt_couta.getText());
                                                        cuota_tot = Double.parseDouble(txt_cuota_pagar.getText());

                                                        try {
                                                            PreparedStatement str = con.getConnection().prepareStatement(query);
                                                            str.setNull(1, java.sql.Types.BIGINT);
                                                            str.setDouble(2, monto);
                                                            str.setDouble(3, interes);
                                                            str.setString(4, fec_c);
                                                            str.setString(5, fec_f);
                                                            str.setDouble(6, monto_a_pa);
                                                            str.setDouble(7, ganancia);
                                                            str.setInt(8, garantia);
                                                            str.setInt(9, cuota);
                                                            str.setDouble(10, cuota_tot);
                                                            str.setInt(11, id_cliente);
                                                            str.setInt(12, seleccion);
                                                            str.setInt(13, 1);
                                                            str.setDouble(14, monto_a_pa);
                                                            str.setInt(15, cuota);
                                                            str.setInt(16, socio);
                                                            str.setInt(17, 1);
                                                            str.setInt(18, cobrador);
                                                            str.setDouble(19, porcentaje);
                                                            str.setDouble(20, pago_comi);

                                                            res = str.executeUpdate();

                                                            if (res > 0) {
                                                                JOptionPane.showMessageDialog(null, "Ingreso completado");
                                                                ga = 1;
                                                                txt_nombre.setText(null);
                                                                txt_dpi.setText(null);
                                                                txt_couta.setText(null);
                                                                txt_cuota_pagar.setText(null);
                                                                txt_ganan.setText(null);
                                                                txt_id.setText(null);
                                                                txt_fecha_creacion.setDate(null);
                                                                txt_interes.setText(null);
                                                                txt_monto_a.setText(null);
                                                                txt_monto_s.setText(null);
                                                                cmb_plazo.setSelectedIndex(0);
                                                                cmb_socio.setSelectedIndex(0);
                                                                cmb_cobrador.setSelectedIndex(0);
                                                                chk_gara.setContentAreaFilled(false);
                                                                txt_pago_porce.setText(null);
                                                                txt_porcentaje.setText(null);
                                                                date_cre.setDate(null);
                                                                date_cre.setCalendar(null);
                                                                txt_couta.setEditable(false);
                                                            } else {
                                                                JOptionPane.showMessageDialog(null, "Error");
                                                            }
                                                            str.close();
                                                        } catch (SQLException e) {
                                                            JOptionPane.showMessageDialog(null, "Error!, la llamada no pudo ser agregada a la base de datos." + e);
                                                        }

                                                    } else {
                                                        JOptionPane.showMessageDialog(null, "Error");

                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }

                    } catch (SQLException e) {
                        JOptionPane.showMessageDialog(null, "Error!, la llamada no pudo ser agregada a la base de datos." + e);
                    }
                    /* 
                     */
                } else {
                    JOptionPane.showMessageDialog(null, "Prestamo No Registrado, Seleccione otro Cliente");
                    txt_nombre.setText(null);
                    txt_dpi.setText(null);
                    txt_couta.setText(null);
                    txt_cuota_pagar.setText(null);
                    txt_ganan.setText(null);
                    txt_id.setText(null);
                    txt_interes.setText(null);
                    txt_monto_a.setText(null);
                    txt_monto_s.setText(null);
                    cmb_plazo.setSelectedIndex(0);
                    cmb_socio.setSelectedIndex(0);
                    cmb_cobrador.setSelectedIndex(0);
                    chk_gara.setContentAreaFilled(false);
                    date_cre.setDate(null);
                    txt_fecha_creacion.setDate(null);
                    txt_couta.setEditable(false);
                    txt_pago_porce.setText(null);
                    txt_porcentaje.setText(null);
                    txt_nombre.setCursor(null);
                    /*txt_nombre.setText(null);
                    txt_dpi.setText(null);
                    txt_couta.setText(null);
                    txt_cuota_pagar.setText(null);
                    txt_ganan.setText(null);
                    txt_id.setText(null);
                    txt_interes.setText(null);
                    txt_monto_a.setText(null);
                    txt_monto_s.setText(null);
                    cmb_plazo.setSelectedIndex(0);
                    cmb_socio.setSelectedIndex(0);
                    cmb_cobrador.setSelectedIndex(0);
                    chk_gara.setAction(null);
                    date_cre.setDate(null);
                    txt_pago_porce.setText(null);
                    txt_porcentaje.setText(null);*/
                }

            } else {
                JOptionPane.showMessageDialog(null, "Prestamo No Registrado, Seleccione otro Cliente");
                txt_nombre.setText(null);
                txt_dpi.setText(null);
                txt_couta.setText(null);
                txt_cuota_pagar.setText(null);
                txt_ganan.setText(null);
                txt_id.setText(null);
                txt_interes.setText(null);
                txt_monto_a.setText(null);
                txt_monto_s.setText(null);
                cmb_plazo.setSelectedIndex(0);
                cmb_socio.setSelectedIndex(0);
                cmb_cobrador.setSelectedIndex(0);
                chk_gara.setContentAreaFilled(false);
                date_cre.setDate(null);
                txt_pago_porce.setText(null);
                txt_couta.setEditable(false);
                txt_fecha_creacion.setDate(null);
                txt_porcentaje.setText(null);
                txt_nombre.setCursor(null);
            }
        } else {

            if (chk_gara.isSelected() == true) {
                garantia = 1;
            }
            if (txt_id.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Seleccione un cliente");
            } else {
                if (txt_monto_s.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Ingrese Monto Solicitado");
                } else {
                    if (txt_interes.getText().isEmpty()) {
                        JOptionPane.showMessageDialog(null, "Ingrese el Interes");
                    } else {
                        if (date_cre.getDate() == null) {
                            JOptionPane.showMessageDialog(null, "Ingrese  fecha Final");
                        } else {
                            if (seleccion == 0) {
                                JOptionPane.showMessageDialog(null, "Seleccione un Plazo");
                            } else {
                                if (socio == 0) {
                                    JOptionPane.showMessageDialog(null, "Seleccione un Socio");
                                } else {
                                    if (cobrador == 0) {
                                        JOptionPane.showMessageDialog(null, "Seleccione un Cobrador");
                                    } else {

                                        monto = Double.parseDouble(txt_monto_s.getText());
                                        interes = Double.parseDouble(txt_interes.getText());
                                        porcentaje = Double.parseDouble(txt_porcentaje.getText());
                                        pago_comi = Double.parseDouble(txt_pago_porce.getText());
                                        id_cliente = Integer.parseInt(txt_id.getText());
                                        ganancia = Double.parseDouble(txt_monto_a.getText());
                                        monto_a_pa = Double.parseDouble(txt_ganan.getText());
                                        fec_f = dformat.format(date_cre.getDate());
                                        fec_c = dformat.format(txt_fecha_creacion.getDate());
                                        cuota = Integer.parseInt(txt_couta.getText());
                                        cuota_tot = Double.parseDouble(txt_cuota_pagar.getText());

                                        try {
                                            PreparedStatement str = con.getConnection().prepareStatement(query);
                                            str.setNull(1, java.sql.Types.BIGINT);
                                            str.setDouble(2, monto);
                                            str.setDouble(3, interes);
                                            str.setString(4, fec_c);
                                            str.setString(5, fec_f);
                                            str.setDouble(6, monto_a_pa);
                                            str.setDouble(7, ganancia);
                                            str.setInt(8, garantia);
                                            str.setInt(9, cuota);
                                            str.setDouble(10, cuota_tot);
                                            str.setInt(11, id_cliente);
                                            str.setInt(12, seleccion);
                                            str.setInt(13, 1);
                                            str.setDouble(14, monto_a_pa);
                                            str.setInt(15, cuota);
                                            str.setInt(16, socio);
                                            str.setInt(17, 1);
                                            str.setInt(18, cobrador);
                                            str.setDouble(19, porcentaje);
                                            str.setDouble(20, pago_comi);

                                            res = str.executeUpdate();

                                            if (res > 0) {
                                                JOptionPane.showMessageDialog(null, "Ingreso completado");
                                                ga = 1;
                                                txt_nombre.setText(null);
                                                txt_dpi.setText(null);
                                                txt_couta.setText(null);
                                                txt_cuota_pagar.setText(null);
                                                txt_ganan.setText(null);
                                                txt_id.setText(null);
                                                txt_interes.setText(null);
                                                txt_monto_a.setText(null);
                                                txt_monto_s.setText(null);
                                                date_cre.setDate(null);
                                                cmb_plazo.setSelectedIndex(0);
                                                cmb_socio.setSelectedIndex(0);
                                                cmb_cobrador.setSelectedIndex(0);
                                                chk_gara.setContentAreaFilled(false);
                                                txt_pago_porce.setText(null);
                                                txt_porcentaje.setText(null);
                                            } else {
                                                JOptionPane.showMessageDialog(null, "Error");
                                            }
                                            str.close();
                                        } catch (SQLException e) {
                                            JOptionPane.showMessageDialog(null, "Error!, la llamada no pudo ser agregada a la base de datos." + e);
                                        }
                                        con.desconectar();
                                    }

                                }
                            }
                        }
                    }
                }
            }

        }
        if (ga == 1) {
            if (garantia == 1) {
                this.setVisible(false);
                new form_garantia().setVisible(true);
            }
        }
        //con.desconectar();

    }//GEN-LAST:event_jButton1ActionPerformed

    private void txt_nombreKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_nombreKeyReleased
        filtro(txt_nombre.getText(), tbla_clie);
    }//GEN-LAST:event_txt_nombreKeyReleased

    private void txt_dpiKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_dpiKeyReleased
        filtro(txt_dpi.getText().toUpperCase(), tbla_clie);
    }//GEN-LAST:event_txt_dpiKeyReleased

    private void txt_interesKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_interesKeyReleased

        String gana, tot;
        String aux;
        DecimalFormatSymbols punto = new DecimalFormatSymbols();
        punto.setDecimalSeparator('.');
        DecimalFormat dc = new DecimalFormat("0.00", punto);

        try {
            if (txt_monto_s.getText().isEmpty()) {
                //JOptionPane.showMessageDialog(null, "Ingrese Monto Solicitado Primero");
            } else {
                if (txt_interes.getText().isEmpty()) {
                    //JOptionPane.showMessageDialog(null, "Ingrese Monto Solicitado Primero")
                } else {
                    monto = Double.parseDouble(txt_monto_s.getText());
                    interes = Double.parseDouble(txt_interes.getText());
                    interes = interes / 100;
                    total = monto * interes;
                    ganancia = total + monto;

                    //ganancia_neta = ganancia - comision_cobra;
                    txt_monto_a.setText(dc.format(total));
                    txt_ganan.setText(dc.format(ganancia));
                    // txt_monto_a.setText(dc.format(ganancia_neta));
                }
            }
        } catch (NumberFormatException ex) {

        }
    }//GEN-LAST:event_txt_interesKeyReleased

    private void txt_monto_sKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_monto_sKeyTyped
        char valida = evt.getKeyChar();
        if (Character.isLetter(valida) || Character.isWhitespace(valida) || evt.getKeyChar() == KeyEvent.VK_COMMA) {
            getToolkit().beep();
            evt.consume();

            JOptionPane.showMessageDialog(null, "Ingrese solo numeros");
        }

    }//GEN-LAST:event_txt_monto_sKeyTyped

    private void txt_interesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_interesKeyTyped
        char valida = evt.getKeyChar();
        if (Character.isLetter(valida) || Character.isWhitespace(valida) || evt.getKeyChar() == KeyEvent.VK_COMMA) {
            getToolkit().beep();
            evt.consume();

            JOptionPane.showMessageDialog(null, "Ingrese solo numeros");
        }
    }//GEN-LAST:event_txt_interesKeyTyped

    private void salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirActionPerformed
        // TODO add your handling code here:
        confirmarSalida();
    }//GEN-LAST:event_salirActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int valor = JOptionPane.showConfirmDialog(this, "¿Esta Seguro que desea Regresar?", "Advertencia", JOptionPane.YES_NO_OPTION);
        if (valor == JOptionPane.YES_OPTION) {
            form_principal frm = new form_principal();
            frm.setVisible(true);
            this.dispose();
        }


    }//GEN-LAST:event_jButton2ActionPerformed

    private void txt_dpiKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_dpiKeyTyped
        char valida = evt.getKeyChar();
        if (Character.isLetter(valida)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(null, "Ingrese solo numeros");
        } else {
            if (txt_dpi.getText().length() == 13) {
                getToolkit().beep();
                evt.consume();
                JOptionPane.showMessageDialog(null, "No mas de 16 digitos");
            }
        }
    }//GEN-LAST:event_txt_dpiKeyTyped

    private void txt_porcentajeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_porcentajeKeyTyped

    }//GEN-LAST:event_txt_porcentajeKeyTyped

    private void txt_porcentajeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_porcentajeKeyReleased
        double monto;
        double interes;
        double total;
        double ganancia, aux, resta;
        String gana, tot;
        DecimalFormatSymbols punto = new DecimalFormatSymbols();
        punto.setDecimalSeparator('.');
        DecimalFormat dc = new DecimalFormat("0.00", punto);
        try {
            if (txt_monto_a.getText().isEmpty()) {
                //JOptionPane.showMessageDialog(null, "Ingrese Monto Solicitado Primero");
            } else {
                if (txt_interes.getText().isEmpty()) {
                    //JOptionPane.showMessageDialog(null, "Ingrese Monto Solicitado Primero");
                } else {
                    monto = Double.parseDouble(txt_monto_s.getText());
                    interes = Double.parseDouble(txt_porcentaje.getText());
                    interes = interes / 100;
                    total = monto * interes;
                    //aux=Double.parseDouble(txt_monto_a.getText());
                    //resta=aux-total;
                    //tot = String.valueOf(total);
                    //gana = String.valueOf(ganancia);
                    //txt_monto_a.setText(dc.format(total));
                    txt_pago_porce.setText(dc.format(total));
                    //txt_monto_a.setText(dc.format(resta));
                }
            }
        } catch (NumberFormatException ex) {

        }
    }//GEN-LAST:event_txt_porcentajeKeyReleased

    private void txt_monto_sInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_txt_monto_sInputMethodTextChanged

        double comision_cobra, ganancia_neta;

    }//GEN-LAST:event_txt_monto_sInputMethodTextChanged

    private void txt_monto_sKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_monto_sKeyReleased
        if (txt_monto_s.getText().length() == 0) {
            System.out.println(txt_monto_s.getText().length());
            
            txt_interes.enable(false);
            date_cre.enable(false);
            chk_gara.enable(false);
            cmb_plazo.enable(false);
            cmb_cobrador.enable(false);
            txt_porcentaje.enable(false);
            cmb_socio.enable(false);
            this.invalidate();
            this.validate();
            this.repaint();
        } else {
          
            txt_interes.enable();
            date_cre.enable();
            chk_gara.enable();
            cmb_plazo.enable();
            cmb_cobrador.enable();
            txt_porcentaje.enable();
            cmb_socio.enable();
            this.invalidate();
            this.validate();
            this.repaint();
        }


    }//GEN-LAST:event_txt_monto_sKeyReleased

    private void txt_monto_sKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_monto_sKeyPressed

    }//GEN-LAST:event_txt_monto_sKeyPressed

    private void txt_coutaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_coutaKeyTyped


    }//GEN-LAST:event_txt_coutaKeyTyped

    private void txt_coutaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_coutaKeyReleased
      
        
        DecimalFormatSymbols punto = new DecimalFormatSymbols();
        punto.setDecimalSeparator('.');
        DecimalFormat dc = new DecimalFormat("0.00", punto);
        if (txt_monto_s.getText().isEmpty()||txt_interes.getText().isEmpty() ) {
            txt_couta.setText("");
            
        }
        
        // identificar solo numeros
        if ((evt.getKeyCode() >= 48 && evt.getKeyCode() <= 57)  || evt.getKeyCode() == KeyEvent.VK_ENTER || evt.getKeyCode() == com.sun.glass.events.KeyEvent.VK_BACKSPACE) {
            if (txt_couta.getText().isEmpty() == false) {
                int cuotasperso = Integer.parseInt(txt_couta.getText());

                //controlando excepcion por division con ceros
                if (cuotasperso <= 0) {
                    JOptionPane.showMessageDialog(this, "Cuota Invalida", "Error", JOptionPane.ERROR_MESSAGE);
                    txt_couta.setText("");
                } else {
                    try {
                        Double monto = Double.parseDouble(txt_ganan.getText());
                        Double total = monto / cuotasperso;
                        txt_cuota_pagar.setText(dc.format(total));

                    } catch (ArithmeticException zeroEx) {
                        JOptionPane.showMessageDialog(this, "Error en el calculo de cuota, ingrese un número de cutoas válido", "Error", JOptionPane.ERROR_MESSAGE);
                        System.out.println(zeroEx.getMessage());
                        txt_couta.setText("");
                        txt_cuota_pagar.setText("");
                    }
                }
            }

        } else {
            JOptionPane.showMessageDialog(this, "Ingrese solo numeros", "Error", JOptionPane.ERROR_MESSAGE);
            txt_couta.setText("");
        }


    }//GEN-LAST:event_txt_coutaKeyReleased

    private void cmb_socioMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmb_socioMouseReleased
        // TODO add your handling code here:

        DecimalFormatSymbols punto = new DecimalFormatSymbols();
        punto.setDecimalSeparator('.');
        DecimalFormat dc = new DecimalFormat("0.00", punto);
        try {
            if (txt_pago_porce.getText().isEmpty()) {
            } else {
                comision_cobra = Double.parseDouble(txt_pago_porce.getText());
                ganancia_neta = ganancia - monto - comision_cobra;
                txt_monto_a.setText(dc.format(ganancia_neta));
            }
        } catch (NumberFormatException ex) {

        }
    }//GEN-LAST:event_cmb_socioMouseReleased

    /**
     * @param args the command line arguments
     */
    public void cerrar() {
        try {
            this.setDefaultCloseOperation(form_newcobrador.DO_NOTHING_ON_CLOSE);
            addWindowListener(new WindowAdapter() {
                public void windowClosing(WindowEvent e) {
                    confirmarSalida();
                }
            }
            );
            this.setVisible(true);
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    public void confirmarSalida() {
        int valor = JOptionPane.showConfirmDialog(this, "¿Esta Seguro que desea Salir?", "Advertencia", JOptionPane.YES_NO_OPTION);
        if (valor == JOptionPane.YES_OPTION) {
            System.exit(0);

        }
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(form_nuevo_prestamo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(form_nuevo_prestamo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(form_nuevo_prestamo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(form_nuevo_prestamo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new form_nuevo_prestamo().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox chk_gara;
    private javax.swing.JComboBox<String> cmb_cobrador;
    private javax.swing.JComboBox cmb_plazo;
    private javax.swing.JComboBox<String> cmb_socio;
    private com.toedter.calendar.JDateChooser date_cre;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton salir;
    private javax.swing.JTable tbla_clie;
    private javax.swing.JTextField txt_couta;
    private javax.swing.JTextField txt_cuota_pagar;
    private javax.swing.JTextField txt_cuota_pagar1;
    private javax.swing.JTextField txt_dpi;
    private com.toedter.calendar.JDateChooser txt_fecha_creacion;
    private javax.swing.JTextField txt_ganan;
    private javax.swing.JTextField txt_ganan1;
    private javax.swing.JTextField txt_id;
    private javax.swing.JTextField txt_interes;
    private javax.swing.JTextField txt_monto_a;
    private javax.swing.JTextField txt_monto_a1;
    private javax.swing.JTextField txt_monto_s;
    private javax.swing.JTextField txt_nombre;
    private javax.swing.JTextField txt_pago_porce;
    private javax.swing.JTextField txt_porcentaje;
    // End of variables declaration//GEN-END:variables
}
